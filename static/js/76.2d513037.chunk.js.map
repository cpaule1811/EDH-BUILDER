{"version":3,"file":"static/js/76.2d513037.chunk.js","mappings":"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","sources":["icons/star.svg","components/Leaderboard/Leaderboard.js","components/Dashboard/Dashboard.js","components/DeckCard/DeckCard.js","components/DeckPages/DeckPages.js","components/spinner/Spinner.js"],"sourcesContent":["var _linearGradient, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    width: \"48px\",\n    height: \"48px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _linearGradient || (_linearGradient = /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"q0c2dLEp_4LHk~8cW2fATa\",\n    x1: 9.009,\n    x2: 38.092,\n    y1: 6.36,\n    y2: 45.266,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    stopColor: \"#ffda1c\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#feb705\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"url(#q0c2dLEp_4LHk~8cW2fATa)\",\n    d: \"M24.913,5.186l5.478,12.288l13.378,1.413c0.861,0.091,1.207,1.158,0.564,1.737l-9.993,9.005 l2.791,13.161c0.18,0.847-0.728,1.506-1.478,1.074L24,37.141l-11.653,6.722c-0.75,0.432-1.657-0.227-1.478-1.074l2.791-13.161 l-9.993-9.005c-0.643-0.579-0.296-1.646,0.564-1.737l13.378-1.413l5.478-12.288C23.439,4.395,24.561,4.395,24.913,5.186z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.1e1c0a25a58a62001c86b425c215c28e.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport \"./Leaderboard.css\";\nimport { Link } from \"react-router-dom\";\nimport star from \"../../icons/star.svg\";\n\nfunction Leaderboard({ rankings, time }) {\n  return (\n    <div className=\"leaderboard-container\">\n      <div className=\"first-tab\">\n        <h1>\n          Top 5{\" \"}\n          <span className=\"month\">{time === \"Monthly\" && \"(Past Month)\"}</span>\n        </h1>\n        <h2>Highest Ranked Decks</h2>\n        <img\n          src={rankings[0].cardArt}\n          alt=\"best magic the gathering cardArt\"\n          title={rankings[0].artist}\n        />\n        <div className=\"white-background\">\n          <div id=\"first-rank\">\n            <div>{rankings[0].avgRating}</div>\n            <img\n              src={star}\n              alt=\"rating for mtg commander deck\"\n              width=\"25px\"\n              height=\"25px\"\n            />\n          </div>\n          <div className=\"deck-details first\">\n            <div className=\"deck\">{rankings[0].deckName}</div>\n            <div>{rankings[0].commander}</div>\n            <div>{rankings[0].partner && `& ${rankings[0].partner}`}</div>\n            <div>{rankings[0].username}</div>\n          </div>\n        </div>\n        <div className=\"description-wrapper\">\n          <div className=\"description\">{`${rankings[0].deckDescription.substring(\n            0,\n            100\n          )}...`}</div>\n        </div>\n        <Link to={`/decklist/${rankings[0].deckID}`}>\n          <button className=\"decklist-button\" id=\"signUp\">\n            Decklist\n          </button>\n        </Link>\n      </div>\n      <div className=\"leaderboard-tabs\">\n        {rankings\n          .concat([0, 0, 0, 0])\n          .slice(1, 5)\n          .map((item, i) => {\n            return (\n              <div key={i} className=\"leaderboard-tab\">\n                <Link to={`/decklist/${item.deckID}`}>\n                  <div className=\"deck-details\">\n                    <div>{item.deckName}</div>\n                    <div>{item.commander}</div>\n                    <div>{item.partner && `& ${item.partner}`}</div>\n                    <div>{item.username}</div>\n                  </div>\n                </Link>\n                <div className=\"factor\">{item.avgRating}</div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n}\n\nexport default Leaderboard;\n","import React, { useEffect, useState } from \"react\";\nimport Leaderboard from \"../Leaderboard/Leaderboard\";\nimport DeckPages from \"../DeckPages/DeckPages\";\nimport { Link } from \"react-router-dom\";\nimport Spinner from \"../spinner/Spinner\";\nimport \"./Dashboard.css\";\nimport \"./../Leaderboard/Leaderboard.css\";\n\nfunction Dashboard() {\n  const [leaderboard, setLeaderboard] = useState([[], []]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_API_URL}/leaderboard`)\n      .then((response) => response.json())\n      .then((leaderboardData) => {\n        setLoading(false);\n        if (leaderboardData[0].length) {\n          setLeaderboard(leaderboardData);\n        }\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"welcome\">\n        <div className=\"welcome-overlay\">\n          <div className=\"welcome-content\">\n            <h1>Welcome to EDH Builder</h1>\n            <h2>\n              An Unofficial commander deckbuilding site for Magic the Gathering\n            </h2>\n            <h6>\n              EDH Builder is unofficial Fan Content permitted under the Fan\n              Content Policy. Not approved/endorsed by Wizards. Portions of the\n              materials used are property of Wizards of the Coast. ©Wizards of\n              the Coast LLC.\n            </h6>\n            <Link to=\"/adddeck\">\n              <button className=\"build\">BUILD</button>\n            </Link>\n          </div>\n        </div>\n      </div>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <div className=\"dashboard-page\">\n          <h1>Top Decks</h1>\n          <div className=\"dashboard-rankings-container\">\n            {leaderboard[0].length ? (\n              <Leaderboard rankings={leaderboard[0]} time=\"alltime\" />\n            ) : null}\n            {leaderboard[1].length ? (\n              <Leaderboard rankings={leaderboard[1]} time=\"Monthly\" />\n            ) : null}\n          </div>\n          <h1>Most Recent Decks</h1>\n          <DeckPages source=\"pub\" />\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport \"./DeckCard.css\";\nimport star from \"../../icons/star.svg\";\nimport { Link } from \"react-router-dom\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\n\nfunction DeckCard(props) {\n  const {\n    deckID,\n    cardArt,\n    deckName,\n    partner,\n    username,\n    avgRating,\n    commander,\n    artist,\n  } = props;\n  return (\n    <Link to={`decklist/${deckID}`}>\n      <div className=\"a-box\">\n        <LazyLoadImage\n          id=\"commander-art\"\n          src={cardArt}\n          alt=\"commander\"\n          title={`Artist: ${artist}`}\n          width={220}\n          height={210}\n        />\n        <div className=\"deck-info-container\">\n          <div className=\"inner-diagnal\" />\n          <h3>{deckName}</h3>\n          <h4>{commander}</h4>\n          {partner && <h4>{`& ${partner}`}</h4>}\n          <div style={{ color: \"black\" }}>{username}</div>\n          <div className=\"rating\">\n            <span id=\"rating\">{avgRating}</span>{\" \"}\n            <img src={star} alt=\"star rating\" height=\"25px\" width=\"25px\" />\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default DeckCard;\n","import React, { useState, useEffect, useCallback, lazy, Suspense } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DeckCard from \"../DeckCard/DeckCard\";\nimport \"./DeckPages.css\";\n\nfunction DeckPages({ source }) {\n  const [pageNo, setPageNo] = useState(1);\n  const [deckNum, setDeckNum] = useState(0);\n  const [lastPage, setLastPage] = useState(1);\n  const [decks, setDecks] = useState([]);\n  const { userId } = useSelector((state) => state.loginStatus);\n\n  const DeckPagesCounter = lazy(() => import(\"./DeckPagesCounter\"));\n\n  useEffect(() => {\n    const url = `${process.env.REACT_APP_API_URL}/decknum${source}/${userId}`;\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setDeckNum(Number(data.count));\n        setLastPage(Math.ceil(Number(data.count) / 8));\n      });\n  }, [source, userId]);\n\n  const handlePageChange = useCallback(\n    (val) => {\n      setPageNo(val);\n      const url = `${process.env.REACT_APP_API_URL}/decks${source}/${val}/${userId}`;\n      fetch(url)\n        .then((response) => response.json())\n        .then((data) => {\n          setDecks(data);\n        });\n    },\n    [source, userId]\n  );\n\n  useEffect(() => {\n    handlePageChange(1);\n  }, [handlePageChange]);\n\n  const between = (pageNo, max) => {\n    var between = [];\n    if (pageNo > 2) {\n      between.push(pageNo - 1);\n    }\n    if (pageNo !== max && pageNo !== 1) {\n      between.push(pageNo);\n    }\n    if (pageNo < max - 1) {\n      between.push(pageNo + 1);\n    }\n    return between;\n  };\n\n  return (\n    <>\n      <div className=\"deckcard-container\">\n        {decks.map((item, i) => {\n          return <DeckCard key={i} {...item} />;\n        })}\n      </div>\n      {deckNum > 8 && (\n        <Suspense fallback={<></>}>\n          <DeckPagesCounter\n            handlePageChange={handlePageChange}\n            pageNo={pageNo}\n            lastPage={lastPage}\n            decks={decks}\n            between={between}\n          />\n        </Suspense>\n      )}\n    </>\n  );\n}\n\nexport default DeckPages;\n","import React from \"react\";\nimport spinner from \"../../icons/spinner.svg\";\n\nfunction Spinner() {\n  return <img className=\"spinner\" src={spinner} alt=\"loading spinner\" />;\n}\n\nexport default Spinner;\n"],"names":["rankings","time","className","src","cardArt","alt","title","artist","id","avgRating","star","width","height","deckName","commander","partner","username","deckDescription","substring","to","deckID","concat","slice","map","item","i","useState","leaderboard","setLeaderboard","loading","setLoading","useEffect","fetch","process","then","response","json","leaderboardData","length","Spinner","DeckPages","source","props","LazyLoadImage","style","color","pageNo","setPageNo","deckNum","setDeckNum","lastPage","setLastPage","decks","setDecks","userId","useSelector","state","loginStatus","DeckPagesCounter","lazy","url","data","Number","count","Math","ceil","handlePageChange","useCallback","val","Suspense","fallback","between","max","push","spinner"],"sourceRoot":""}